<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rtos on DistributedFog</title>
    <link>http://distributedfog.com/tags/rtos/</link>
    <description>Recent content in Rtos on DistributedFog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 Oct 2017 17:56:48 +0100</lastBuildDate>
    
	<atom:link href="http://distributedfog.com/tags/rtos/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Android Things</title>
      <link>http://distributedfog.com/os/android-things/</link>
      <pubDate>Wed, 11 Oct 2017 17:56:48 +0100</pubDate>
      
      <guid>http://distributedfog.com/os/android-things/</guid>
      <description>Android Things (codenamed/rebranded from Brillo) is an Android-based embedded operating system platform by Google. It is aimed to be used with low-power and memory constrained Internet of Things (IoT) devices, which are usually built from different microcontroller platforms.  Wikipedia     Like updates for Android Phones, developers can push Google-provided OS updates and custom app updates using the same over-the-air infrastructure that Google uses for its products and services.</description>
    </item>
    
    <item>
      <title>Contiki</title>
      <link>http://distributedfog.com/os/contiki/</link>
      <pubDate>Wed, 11 Oct 2017 17:56:48 +0100</pubDate>
      
      <guid>http://distributedfog.com/os/contiki/</guid>
      <description>An open source operating system for the Internet of Things. Contiki connects tiny low-cost, low-power microcontrollers to the Internet. Contiki is a powerful toolbox for building complex wireless systems.  contiki-os.org     Research vs TinyOS, IoT-Lab Testbed, WSN OS Comparisons
 
Programming on Contiki is done using the Cooja network simulator. To program, control and monitor the remote IoT devices, the back-end C base libraries of RFID chips and sensors can be customised and recompiled to get the desired results.</description>
    </item>
    
    <item>
      <title>LiteOS</title>
      <link>http://distributedfog.com/os/lite/</link>
      <pubDate>Wed, 11 Oct 2017 17:56:48 +0100</pubDate>
      
      <guid>http://distributedfog.com/os/lite/</guid>
      <description>LiteOS is a Unix-like operating system that fits on memory-constrained sensor nodes. LiteOS provides a familiar programming environment based on Unix, threads, and C. It follows a hybrid programming model that allows both event-driven and thread-driven programming.  Wikipedia     Research Original LiteOS Paper, Interactive UNIX Shell Demo Paper, Event Traces in the LiteOS
 
Huawei also developed an open-source operating system for the IoT called Huawei LiteOS.</description>
    </item>
    
    <item>
      <title>TinyOS</title>
      <link>http://distributedfog.com/os/tiny/</link>
      <pubDate>Wed, 11 Oct 2017 17:56:48 +0100</pubDate>
      
      <guid>http://distributedfog.com/os/tiny/</guid>
      <description>TinyOS is an embedded, component-based operating system and platform for low-power wireless devices, such as those used in wireless sensor networks (WSNs), smartdust, ubiquitous computing, personal area networks, building automation, and smart meters.  Wikipedia     Research Original Paper, Hybrid Network Evaluation, Ten-years on Paper
 
Programming on TinyOS is done using a C-like language called nesC. It is a component-based, event-driven programming language with components &amp;ldquo;wired&amp;rdquo; together to run applications.</description>
    </item>
    
  </channel>
</rss>